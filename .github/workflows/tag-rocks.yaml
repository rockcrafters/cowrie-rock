name: Tag Rocks

on:
  workflow_call:
    outputs:
      json_result:
        description: "JSON array of rockcraft.yaml metadata"
        value: ${{ jobs.tag-rocks.outputs.json_result }}

jobs:
  tag-rocks:
    runs-on: ubuntu-latest
    outputs:
      json_result: ${{ steps.generate.outputs.json_result }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate rocks list with its tag in JSON format
        id: generate
        run: |
          output="[]"
          while IFS= read -r -d '' file; do

            # generate a unique build ID for the rock  
            build_id=$(echo "$file" | md5sum | cut -d' ' -f1)

            # extract embedded CI config
            temp_file=$build_id
            grep '^#cd!' "$file" | sed 's/^#cd!//' > "$temp_file"

            name=$(yq '.name' "$file")
            base=$(yq '.base' "$file")
            location=$(dirname "$file" | sed 's|^\./||')
            channel="edge"

            tags=$(yq '.tags' "$temp_file")
            version=$(yq '.version' "$temp_file")

            if [[ "$base" == "bare" ]]; then
              base=$(yq '.build-base' "$file")
            fi

            base=$(echo "$base" | sed 's/[^0-9.]//g')

            entry=$(jq -n \
              --arg id "$(build_id)" \
              --arg name "$name" \
              --arg base "$base" \
              --arg version "$version" \
              --argjson tags "$tags" \
              --arg location "$location" \
              '{id: $id, name: $name, base: $base, version: $version, tags: $tags, location: $location}')

            output=$(jq ". + [ $entry ]" <<< "$output")
          done < <(find . -type f -name rockcraft.yaml -print0)

          echo "$output" > rocks.json
          echo 'json_result<<EOF' >> "$GITHUB_OUTPUT"
          cat rocks.json >> "$GITHUB_OUTPUT"
          echo 'EOF' >> "$GITHUB_OUTPUT"